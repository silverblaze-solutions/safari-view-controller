var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { AwesomeCordovaNativePlugin, cordova } from '@awesome-cordova-plugins/core';
import { Observable } from 'rxjs';
var SafariViewControllerOriginal = /** @class */ (function (_super) {
    __extends(SafariViewControllerOriginal, _super);
    function SafariViewControllerOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SafariViewControllerOriginal.prototype.isAvailable = function () { return cordova(this, "isAvailable", {}, arguments); };
    SafariViewControllerOriginal.prototype.show = function (options) { return cordova(this, "show", { "successIndex": 1, "errorIndex": 2, "observable": true }, arguments); };
    SafariViewControllerOriginal.prototype.hide = function () { return cordova(this, "hide", {}, arguments); };
    SafariViewControllerOriginal.prototype.connectToService = function () { return cordova(this, "connectToService", {}, arguments); };
    SafariViewControllerOriginal.prototype.warmUp = function () { return cordova(this, "warmUp", {}, arguments); };
    SafariViewControllerOriginal.prototype.mayLaunchUrl = function (url) { return cordova(this, "mayLaunchUrl", {}, arguments); };
    SafariViewControllerOriginal.pluginName = "SafariViewController";
    SafariViewControllerOriginal.plugin = "cordova-plugin-safariviewcontroller";
    SafariViewControllerOriginal.pluginRef = "SafariViewController";
    SafariViewControllerOriginal.repo = "https://github.com/EddyVerbruggen/cordova-plugin-safariviewcontroller";
    SafariViewControllerOriginal.platforms = ["Android", "iOS"];
    return SafariViewControllerOriginal;
}(AwesomeCordovaNativePlugin));
var SafariViewController = new SafariViewControllerOriginal();
export { SafariViewController };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvQGF3ZXNvbWUtY29yZG92YS1wbHVnaW5zL3BsdWdpbnMvc2FmYXJpLXZpZXctY29udHJvbGxlci9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFDQSxPQUFPLHVDQUErQyxNQUFNLCtCQUErQixDQUFDO0FBQzVGLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxNQUFNLENBQUM7O0lBa0VRLHdDQUEwQjs7OztJQU9sRSwwQ0FBVztJQWVYLG1DQUFJLGFBQUMsT0FBcUM7SUFRMUMsbUNBQUk7SUFVSiwrQ0FBZ0I7SUFVaEIscUNBQU07SUFZTiwyQ0FBWSxhQUFDLEdBQVc7Ozs7OzsrQkFsSTFCO0VBb0UwQywwQkFBMEI7U0FBdkQsb0JBQW9CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29yZG92YSwgQXdlc29tZUNvcmRvdmFOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bhd2Vzb21lLWNvcmRvdmEtcGx1Z2lucy9jb3JlJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcblxuZXhwb3J0IGludGVyZmFjZSBTYWZhcmlWaWV3Q29udHJvbGxlck9wdGlvbnMge1xuICBhbmltYXRlZD86IGJvb2xlYW47XG4gIGJhckNvbG9yPzogc3RyaW5nO1xuICBjb250cm9sVGludENvbG9yPzogc3RyaW5nO1xuICBlbnRlclJlYWRlck1vZGVJZkF2YWlsYWJsZT86IGJvb2xlYW47XG4gIGhpZGRlbj86IGJvb2xlYW47XG4gIHNob3dEZWZhdWx0U2hhcmVNZW51SXRlbT86IGJvb2xlYW47XG4gIHRpbnRDb2xvcj86IHN0cmluZztcbiAgdG9vbGJhckNvbG9yPzogc3RyaW5nO1xuICB0cmFuc2l0aW9uPzogc3RyaW5nO1xuICB1cmw/OiBzdHJpbmc7XG59XG5cbi8qKlxuICogQG5hbWUgU2FmYXJpIFZpZXcgQ29udHJvbGxlclxuICogQGRlc2NyaXB0aW9uXG4gKiBGb3IgZGlzcGxheWluZyByZWFkLW9ubHkgd2ViIGNvbnRlbnQuXG4gKlxuICogUmVxdWlyZXMgQ29yZG92YSBwbHVnaW46IGBjb3Jkb3ZhLXBsdWdpbi1zYWZhcml2aWV3Y29udHJvbGxlcmAuIEZvciBtb3JlIGluZm8sIHBsZWFzZSBzZWUgdGhlIFtTYWZhcmkgVmlldyBDb250cm9sbGVyIHBsdWdpbiBkb2NzXShodHRwczovL2dpdGh1Yi5jb20vRWRkeVZlcmJydWdnZW4vY29yZG92YS1wbHVnaW4tc2FmYXJpdmlld2NvbnRyb2xsZXIpLlxuICogQHVzYWdlXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBpbXBvcnQgeyBTYWZhcmlWaWV3Q29udHJvbGxlciB9IGZyb20gJ0Bhd2Vzb21lLWNvcmRvdmEtcGx1Z2lucy9zYWZhcmktdmlldy1jb250cm9sbGVyL25neCc7XG4gKlxuICogY29uc3RydWN0b3IocHJpdmF0ZSBzYWZhcmlWaWV3Q29udHJvbGxlcjogU2FmYXJpVmlld0NvbnRyb2xsZXIpIHsgfVxuICpcbiAqIC4uLlxuICpcbiAqIHRoaXMuc2FmYXJpVmlld0NvbnRyb2xsZXIuaXNBdmFpbGFibGUoKVxuICogICAudGhlbigoYXZhaWxhYmxlOiBib29sZWFuKSA9PiB7XG4gKiAgICAgICBpZiAoYXZhaWxhYmxlKSB7XG4gKlxuICogICAgICAgICB0aGlzLnNhZmFyaVZpZXdDb250cm9sbGVyLnNob3coe1xuICogICAgICAgICAgIHVybDogJ2h0dHA6Ly9pb25pYy5pbycsXG4gKiAgICAgICAgICAgaGlkZGVuOiBmYWxzZSxcbiAqICAgICAgICAgICBhbmltYXRlZDogZmFsc2UsXG4gKiAgICAgICAgICAgdHJhbnNpdGlvbjogJ2N1cmwnLFxuICogICAgICAgICAgIGVudGVyUmVhZGVyTW9kZUlmQXZhaWxhYmxlOiB0cnVlLFxuICogICAgICAgICAgIHRpbnRDb2xvcjogJyNmZjAwMDAnXG4gKiAgICAgICAgIH0pXG4gKiAgICAgICAgIC5zdWJzY3JpYmUoKHJlc3VsdDogYW55KSA9PiB7XG4gKiAgICAgICAgICAgICBpZihyZXN1bHQuZXZlbnQgPT09ICdvcGVuZWQnKSBjb25zb2xlLmxvZygnT3BlbmVkJyk7XG4gKiAgICAgICAgICAgICBlbHNlIGlmKHJlc3VsdC5ldmVudCA9PT0gJ2xvYWRlZCcpIGNvbnNvbGUubG9nKCdMb2FkZWQnKTtcbiAqICAgICAgICAgICAgIGVsc2UgaWYocmVzdWx0LmV2ZW50ID09PSAnY2xvc2VkJykgY29uc29sZS5sb2coJ0Nsb3NlZCcpO1xuICogICAgICAgICAgIH0sXG4gKiAgICAgICAgICAgKGVycm9yOiBhbnkpID0+IGNvbnNvbGUuZXJyb3IoZXJyb3IpXG4gKiAgICAgICAgICk7XG4gKlxuICogICAgICAgfSBlbHNlIHtcbiAqICAgICAgICAgLy8gdXNlIGZhbGxiYWNrIGJyb3dzZXIsIGV4YW1wbGUgSW5BcHBCcm93c2VyXG4gKiAgICAgICB9XG4gKiAgICAgfVxuICogICApO1xuICogYGBgXG4gKiBAaW50ZXJmYWNlc1xuICogU2FmYXJpVmlld0NvbnRyb2xsZXJPcHRpb25zXG4gKi9cbkBQbHVnaW4oe1xuICBwbHVnaW5OYW1lOiAnU2FmYXJpVmlld0NvbnRyb2xsZXInLFxuICBwbHVnaW46ICdjb3Jkb3ZhLXBsdWdpbi1zYWZhcml2aWV3Y29udHJvbGxlcicsXG4gIHBsdWdpblJlZjogJ1NhZmFyaVZpZXdDb250cm9sbGVyJyxcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9FZGR5VmVyYnJ1Z2dlbi9jb3Jkb3ZhLXBsdWdpbi1zYWZhcml2aWV3Y29udHJvbGxlcicsXG4gIHBsYXRmb3JtczogWydBbmRyb2lkJywgJ2lPUyddLFxufSlcbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBTYWZhcmlWaWV3Q29udHJvbGxlciBleHRlbmRzIEF3ZXNvbWVDb3Jkb3ZhTmF0aXZlUGx1Z2luIHtcbiAgLyoqXG4gICAqIENoZWNrcyBpZiBTYWZhcmlWaWV3Q29udHJvbGxlciBpcyBhdmFpbGFibGVcbiAgICpcbiAgICogQHJldHVybnMge1Byb21pc2U8Ym9vbGVhbj59XG4gICAqL1xuICBAQ29yZG92YSgpXG4gIGlzQXZhaWxhYmxlKCk6IFByb21pc2U8Ym9vbGVhbj4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBTaG93cyBTYWZhcmkgVmlldyBDb250cm9sbGVyXG4gICAqXG4gICAqIEBwYXJhbSBvcHRpb25zIHtTYWZhcmlWaWV3Q29udHJvbGxlck9wdGlvbnN9IG9wdGlvbmFsXG4gICAqIEByZXR1cm5zIHtPYnNlcnZhYmxlPGFueT59XG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgc3VjY2Vzc0luZGV4OiAxLFxuICAgIGVycm9ySW5kZXg6IDIsXG4gICAgb2JzZXJ2YWJsZTogdHJ1ZSxcbiAgfSlcbiAgc2hvdyhvcHRpb25zPzogU2FmYXJpVmlld0NvbnRyb2xsZXJPcHRpb25zKTogT2JzZXJ2YWJsZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogSGlkZXMgU2FmYXJpIFZpZXcgQ29udHJvbGxlclxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBoaWRlKCk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIFRyaWVzIHRvIGNvbm5lY3QgdG8gdGhlICBDaHJvbWUncyBjdXN0b20gdGFicyBzZXJ2aWNlLiB5b3UgbXVzdCBjYWxsIHRoaXMgbWV0aG9kIGJlZm9yZSBjYWxsaW5nIGFueSBvZiB0aGUgb3RoZXIgbWV0aG9kcyBsaXN0ZWQgYmVsb3cuXG4gICAqXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59XG4gICAqL1xuICBAQ29yZG92YSgpXG4gIGNvbm5lY3RUb1NlcnZpY2UoKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogQ2FsbCB0aGlzIG1ldGhvZCB3aGVuZXZlciB0aGVyZSdzIGEgY2hhbmNlIHRoZSB1c2VyIHdpbGwgb3BlbiBhbiBleHRlcm5hbCB1cmwuXG4gICAqXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59XG4gICAqL1xuICBAQ29yZG92YSgpXG4gIHdhcm1VcCgpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBGb3IgZXZlbiBiZXR0ZXIgcGVyZm9ybWFuY2Ugb3B0aW1pemF0aW9uLCBjYWxsIHRoaXMgbWV0aG9kcyBpZiB0aGVyZSdzIG1vcmUgdGhhbiBhIDUwJSBjaGFuY2UgdGhlIHVzZXIgd2lsbCBvcGVuIGEgY2VydGFpbiBVUkwuXG4gICAqXG4gICAqIEBwYXJhbSB1cmx7c3RyaW5nfVxuICAgKiBAcGFyYW0gdXJsXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59XG4gICAqL1xuICBAQ29yZG92YSgpXG4gIG1heUxhdW5jaFVybCh1cmw6IHN0cmluZyk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG59XG4iXX0=